{
    "tasks": {
      "prepare food": {
        "items": ["apple", "plate", "dishbowl"],
        "locations": ["kitchencounter", "cabinet"],
        "goal": ["GOAL_0(apple, plate, kitchencounter) = true;"],
        "destination": ["DESTINATION_0(apple, kitchencounter) = true;", "DESTINATION_1(plate, kitchencounter) = true;"],
        "rewards": [
        "+5 * [sum_{?a: agent, ?l: location}(agent_open(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l))]",
        "+5 * [sum_{?a: agent, ?l: location}(agent_close(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l))]",
        "+20 * [sum_{?a: agent, ?i: item, ?l: location}(pick(?a, ?i, ?l))]",
        "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ CONTAINER(?i) ^ DESTINATION_1(?i, ?l))]",
        "+40 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ FOOD_ITEM(?i) ^ DESTINATION_0(?i, ?l))]",
        "+50 * [sum_{?a: agent, ?i: item, ?j: item}(put_in(?a, ?i, ?j) ^ FOOD_ITEM(?i) ^ CONTAINER(?j) )]",
        "+100 * [sum_{?i: item, ?j: item, ?l: location}(food-in(?i, ?j) ^ FOOD_ITEM(?i) ^ CONTAINER(?j) ^ GOAL_0(?i, ?j, ?l))]"
      ]
      },
  
      "prepare breakfast cereal": {
        "items": ["cereal", "dishbowl", "mug", "milk"],
        "locations": ["kitchencounter", "cabinet", "fridge"],
        "goal": ["GOAL_0(cereal, dishbowl, kitchencounter) = true;", "GOAL_1(milk, mug, kitchencounter) = true;"],
        "destination": [
          "DESTINATION_0(cereal, kitchencounter) = true;",
          "DESTINATION_1(dishbowl, kitchencounter) = true;",
          "DESTINATION_2(milk, kitchencounter) = true;",
          "DESTINATION_3(mug, kitchencounter) = true;"
        ],
        "rewards": [
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
          "+ 20 * [ sum_{?a: agent, ?f: item, ?l: location}( pick(?a, ?f, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ (DESTINATION_2(?p, ?l) | DESTINATION_3(?p, ?l)) )]",
          "+ 40 * [ sum_{?a: agent, ?f: item, ?p: item}( put_in(?a, ?f, ?p) ^ FOOD_ITEM(?f) ^ CONTAINER(?p) )]",
          "+ 50 * [ sum_{?a: agent, ?f: item, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ (DESTINATION_0(?p, ?l) | DESTINATION_1(?p, ?l)) ^ food-in(?f, ?p) )]",
          "+ 100 * [ sum_{?f: item, ?p: item, ?l: location}( FOOD_ITEM(?f) ^ CONTAINER(?p) ^ food-in(?f, ?p) ^ (GOAL_0(?f, ?p, ?l) )]",
          "+ 100 * [ sum_{?f: item, ?p: item, ?l: location}( FOOD_ITEM(?f) ^ CONTAINER(?p) ^ food-in(?f, ?p) ^ GOAL_1(?f, ?p, ?l) )]"
        ]
      },
  
      "prepare breakfast toast": {
        "items": ["breadslice", "plate"],
        "locations": ["kitchencounter", "stove", "toaster", "fridge", "cabinet"],
        "goal": ["GOAL_0(breadslice, plate, kitchencounter) = true;"],
        "destination": [
          "DESTINATION_0(breadslice, toaster) = true;",
          "DESTINATION_1(plate, kitchencounter) = true;"
        ],
        "rewards": [
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 20 * [ sum_{?a: agent, ?f: item, ?l: location}( pick(?a, ?f, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ DESTINATION_1(?p, ?l) )]",
          "+ 40 * [ sum_{?a: agent, ?f: item, ?l: location}( place(?a, ?f, ?l) ^ DESTINATION_0(?f, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 50 * [ sum_{?a: agent, ?f: item, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ DESTINATION_1(?p, ?l) ^ food-in(?f, ?p) )]",
          "+ 100 * [ sum_{?f: item, ?p: item, ?l: location}( put_in(?a, ?f, ?p) ^ FOOD_ITEM(?f) ^ CONTAINER(?p) ^ food-in(?f, ?p) ^ GOAL_0(?f, ?p, ?l) )]"
        ]
      },
  
      "prepare lunch salmon": {
        "items": ["salmon", "plate"],
        "locations": ["kitchencounter", "stove", "fridge", "microwave", "cabinet"],
        "goal": ["GOAL_0(salmon, plate, kitchencounter) = true;"],
        "destination": [
          "DESTINATION_0(salmon, stove) = true;",
          "DESTINATION_1(plate, kitchencounter) = true;"
        ],
        "rewards": [
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 20 * [ sum_{?a: agent, ?f: item, ?l: location}( pick(?a, ?f, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ DESTINATION_1(?p, ?l) )]",
          "+ 40 * [ sum_{?a: agent, ?f: item, ?l: location}( place(?a, ?f, ?l) ^ FOOD_ITEM(?f) ^ DESTINATION_0(?f, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 50 * [ sum_{?a: agent, ?f: item, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ DESTINATION_1(?p, ?l) ^ food-in(?f, ?p) )]",
          "+ 100 * [ sum_{?f: item, ?p: item, ?l: location}( put_in(?a, ?f, ?p) ^ FOOD_ITEM(?f) ^ CONTAINER(?p) ^ food-in(?f, ?p) ^ GOAL_0(?f, ?p, ?l) )]"
        ]
      },
  
      "serve the food cereal": {
        "items": ["dishbowl", "cereal", "milk", "mug"],
        "locations": ["coffeetable", "kitchencounter", "cabinet", "fridge"],
        "goal": ["GOAL_0(cereal, dishbowl, coffeetable) = true;", "GOAL_1(milk, mug, coffeetable) = true;"],
        "destination": [
          "DESTINATION_0(dishbowl, coffeetable) = true;",
          "DESTINATION_1(cereal, coffeetable) = true;",
          "DESTINATION_2(mug, coffeetable) = true;",
          "DESTINATION_3(milk, coffeetable) = true;"
        ],
          "rewards": [
    "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
    "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
    "+20 * [sum_{?a: agent, ?i: item, ?l: location}(pick(?a, ?i, ?l))]",
    "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ DESTINATION_0(?i, ?l))]",
    "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ DESTINATION_1(?i, ?l))]",
    "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ DESTINATION_2(?i, ?l))]",
    "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ DESTINATION_3(?i, ?l))]",
    "+40 * [sum_{?a: agent, ?i: item, ?j: item}(put_in(?a, ?i, ?j))]",
    "+100 * [sum_{?i: item, ?j: item, ?l: location}(food-in(?i, ?j) ^ FOOD_ITEM(?i) ^ CONTAINER(?j) ^ GOAL_0(?i, ?j, ?l))]",
    "+100 * [sum_{?i: item, ?j: item, ?l: location}(food-in(?i, ?j) ^ FOOD_ITEM(?i) ^ CONTAINER(?j) ^ GOAL_1(?i, ?j, ?l))]"
  ]
      },
  
      "serve a drink water": {
        "items": ["water", "waterglass"],
        "locations": ["coffeetable", "kitchencounter", "cabinet", "faucet"],
        "goal": ["GOAL_0(water, waterglass, coffeetable) = true;"],
        "destination": ["DESTINATION_0(waterglass, coffeetable) = true;"],
    "rewards": [
    "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
    "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
    "+5 * [sum_{?a: agent, ?l: location}(agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l))]",
    "+5 * [sum_{?a: agent, ?l: location}(agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l))]",
    "+20 * [sum_{?a: agent, ?g: item, ?l: location}(pick(?a, ?g, ?l) ^ CONTAINER(?g))]",
    "+30 * [sum_{?a: agent, ?g: item, ?l: location}(place(?a, ?g, ?l) ^ CONTAINER(?g) ^ DESTINATION_0(?g, ?l))]",
    "+80 * [sum_{?a: agent, ?drink: item, ?container: item}(put_in(?a, ?drink, ?container) ^ FOOD_ITEM(?drink) ^ CONTAINER(?container))]",
    "+100 * [sum_{?drink: item, ?container: item, ?l: location}(FOOD_ITEM(?drink) ^ CONTAINER(?container) ^ food-in(?drink, ?container) ^ GOAL_0(?drink, ?container, ?l))]"
  ]
      },
  
      "serve a drink coffee": {
        "items": ["coffee", "glass", "pan", "water"],
        "locations": ["cabinet", "coffeemaker", "coffeetable", "stove", "faucet"],
        "goal": ["GOAL_0(coffee, glass, coffeemaker) = true;", "GOAL_1(coffee, glass, coffeetable) = true;"],
        "destination": [
          "DESTINATION_0(coffee, coffeemaker) = true;",
          "DESTINATION_1(water, coffeemaker) = true;",
          "DESTINATION_2(glass, coffeetable) = true;"
        ],
        "rewards": [
    "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
    "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
    "+20 * [sum_{?a: agent, ?i: item, ?l: location}(pick(?a, ?i, ?l))]",
    "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ DESTINATION_0(?i, ?l))]",
    "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ DESTINATION_1(?i, ?l))]",
    "+30 * [sum_{?a: agent, ?i: item, ?l: location}(place(?a, ?i, ?l) ^ DESTINATION_2(?i, ?l))]",
    "+40 * [sum_{?a: agent, ?i: item, ?j: item}(put_in(?a, ?i, ?j) ^ FOOD_ITEM(?i) ^ CONTAINER(?j) )]",
    "+5 * [sum_{?a: agent, ?l: location}(agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l))]",
    "+5 * [sum_{?a: agent, ?l: location}(agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l))]",
    "+100 * [sum_{?i: item, ?j: item, ?l: location}(food-in(?i, ?j) ^ FOOD_ITEM(?i) ^ CONTAINER(?j) ^ GOAL_0(?i, ?j, ?l))]",
    "+100 * [sum_{?i: item, ?j: item, ?l: location}(food-in(?i, ?j) ^ FOOD_ITEM(?i) ^ CONTAINER(?j) ^ GOAL_1(?i, ?j, ?l))]"
  ]
      },
  
      "serve dinner pizza": {
        "items": ["pizza-base", "plate"],
        "locations": ["cabinet", "oven", "coffeetable", "microwave"],
        "goal": ["GOAL_0(pizza-base, plate, coffeetable) = true;"],
        "destination": [
          "DESTINATION_0(pizza-base, oven) = true;",
          "DESTINATION_1(plate, coffeetable) = true;"
        ],
        "rewards": [
          "+ 20 * [ sum_{?a: agent, ?f: item, ?l: location}( pick(?a, ?f, ?l) ^ FOOD_ITEM(?f) )]", 
          "+ 50 * [ sum_{?a: agent, ?f: item, ?l: location} ( place(?a, ?f, ?l) ^ FOOD_ITEM(?f) ^ DESTINATION_0(?f, ?l) )]", 
          "+ 50 * [ sum_{?a: agent, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ DESTINATION_1(?p, ?l) )]",
          "+ 150 * [ sum_{?f: item, ?p: item, ?l: location}( FOOD_ITEM(?f) ^ CONTAINER(?p) ^ food-in(?f, ?p) ^ GOAL_0(?f, ?p, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]", 
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]"
        ]        
      },
  
      "serve breakfast eggs": {
        "items": ["eggs", "plate", "pan", "water"],
        "locations": ["sink", "stove", "microwave", "kitchencounter", "cabinet"],
        "goal": ["GOAL_0(eggs, pan, stove) = true;", "GOAL_1(eggs, plate, kitchencounter) = true;"],
        "destination": ["DESTINATION_0(pan, stove) = true;", "DESTINATION_1(eggs, kitchencounter) = true;"],
        "rewards": [
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 20 * [ sum_{?a: agent, ?f: item, ?l: location}( pick(?a, ?f, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?p: item, ?f: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ DESTINATION_1(?p, ?l) ^ food-in(?f, ?p) )]",
          "+ 30 * [ sum_{?a: agent, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ DESTINATION_0(?p, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 40 * [ sum_{?a: agent, ?f: item, ?p: item}( put_in(?a, ?f, ?p) ^ FOOD_ITEM(?f) ^ CONTAINER(?p) )]",
          "+ 100 * [ sum_{?f: item, ?p: item, ?l: location}( FOOD_ITEM(?f) ^ CONTAINER(?p) ^ food-in(?f, ?p) ^ (GOAL_0(?f, ?p, ?l) | GOAL_1(?f, ?p, ?l)) )]"
        ]
      },
  
      "serve breakfast fruits": {
        "items": ["apple", "banana", "knife", "dishbowl", "plate"],
        "locations": ["kitchencounter", "coffeetable", "cabinet"],
        "goal": [
          "GOAL_0(apple, dishbowl, coffeetable) = true;",
          "GOAL_1(banana, dishbowl, coffeetable) = true;"
        ],
        "destination": [
          "DESTINATION_0(apple, coffeetable) = true;",
          "DESTINATION_1(banana, coffeetable) = true;",
          "DESTINATION_2(dishbowl, coffeetable) = true;",
          "DESTINATION_3(knife, kitchencounter) = true;"
        ],
        "rewards": [
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
          "+ 20 * [ sum_{?a: agent, ?f: item, ?l: location}( pick(?a, ?f, ?l) ^ FOOD_ITEM(?f) )]",
          "+ 20 * [ sum_{?a: agent, ?p: item, ?l: location}( pick(?a, ?p, ?l) ^ CONTAINER(?p) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ DESTINATION_2(?p, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?i: item, ?l: location}( place(?a, ?i, ?l) ^ DESTINATION_3(?i, ?l) )]",
          "+ 40 * [ sum_{?a: agent, ?f: item, ?p: item}( put_in(?a, ?f, ?p) ^ FOOD_ITEM(?f) ^ CONTAINER(?p) )]",
          "+ 50 * [ sum_{?a: agent, ?f: item, ?p: item, ?l: location}( place(?a, ?p, ?l) ^ CONTAINER(?p) ^ (DESTINATION_0(?p, ?l) | DESTINATION_1(?p, ?l)) ^ food-in(?f, ?p) )]",
          "+ 100 * [ sum_{?f: item, ?p: item, ?l: location}( FOOD_ITEM(?f) ^ CONTAINER(?p) ^ food-in(?f, ?p) ^ (GOAL_0(?f, ?p, ?l) | GOAL_1(?f, ?p, ?l)) )]"
        ]
      },
  
      "wash the dishes": {
        "items": ["plate", "cleaning_solution", "washingsponge", "soap"],
        "locations": ["sink", "cabinet", "faucet"],
        "goal": [],
        "destination": [
          "DESTINATION_0(plate, sink) = true;",
          "DESTINATION_1(soap, sink) = true;",
          "DESTINATION_2(washingsponge, sink) = true;"
        ],
        "rewards": [
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_open(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 20 * [ sum_{?a: agent, ?i: item, ?l: location}( pick(?a, ?i, ?l) )]",
          "+ 5 * [ sum_{?a: agent, ?l: location}( agent_close(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?i: item, ?l: location}( place(?a, ?i, ?l) ^ (DESTINATION_0(?i, ?l) | DESTINATION_1(?i, ?l) | DESTINATION_2(?i, ?l)) )]",
          "+ 10 * [ sum_{?a: agent, ?l: location}( agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 40 * [ sum_{?a: agent, ?l: location}( clean(?a, ?l) )]",
          "+ 10 * [ sum_{?a: agent, ?l: location}( agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ HAS-SWITCH(?l) ^ agent-loc(?a, ?l) )]",
          "+ 50 * [ sum_{?l: location}( cleaned(?l) )]"
        ]
      },
  
      "do the laundry": {
        "items": ["clothesshirt", "detergent"],
        "locations": ["closet", "washingmachine", "cabinet"],
        "goal": [],
        "destination": [
          "DESTINATION_0(clothesshirt, washingmachine) = true;",
          "DESTINATION_1(detergent, washingmachine) = true;"
        ],
        "rewards": [
          "+ 20 * [ sum_{?a: agent, ?i: item, ?l: location}( pick(?a, ?i, ?l) )]",
          "+ 30 * [ sum_{?a: agent, ?i: item, ?l: location}( place(?a, ?i, ?l) ^ (DESTINATION_0(?i, ?l) | DESTINATION_1(?i, ?l)) )]",
          "+ 10 * [ sum_{?a: agent, ?l: location}( agent_switch_on(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
          "+ 40 * [ sum_{?a: agent, ?l: location}( switch_appliance(?l) )]",
          "+ 10 * [ sum_{?a: agent, ?l: location}( agent_switch_off(?a, ?l) ^ APPLIANCE(?l) ^ agent-loc(?a, ?l) )]",
          "+ 50 * [ sum_{?l: location}( cleaned(?l) )]"
        ]
      },
  
      "clean the room kitchen": {
        "items": ["washingsponge", "soap", "towel"],
        "locations": ["kitchencounter", "cabinet"],
        "goal": [],
        "destination": [
          "DESTINATION_0(washingsponge, kitchencounter) = true;",
          "DESTINATION_1(soap, kitchencounter) = true;",
          "DESTINATION_2(towel, kitchencounter) = true;"
        ],
        "rewards": [
          "+ 20 * [ sum_{?a: agent, ?i: item, ?l: location}( pick(?a, ?i, ?l) )]",
        "+ 30 * [ sum_{?a: agent, ?i: item, ?l: location}( place(?a, ?i, ?l) ^ (DESTINATION_0(?i, ?l) | DESTINATION_1(?i, ?l) | DESTINATION_2(?i, ?l)) )]",
        "+ 50 * [ sum_{?a: agent, ?l: location}( clean(?a, ?l) ^ exists_{?m: item}(inhand(?a, ?m) ^ MOP_ITEM(?m)) ^ ~cleaned(?l) )]",
        "+ 100 * [ sum_{?l: location}( cleaned(?l) )]"
        ]
      },
  
      "clean the room bathroom": {
        "items": ["washingsponge", "trash", "towel", "soap"],
        "locations": ["sink", "floor", "garbagecan", "bathroomcounter", "cabinet"],
        "goal": [],
        "destination": [
          "DESTINATION_0(washingsponge, bathroomcounter) = true;",
          "DESTINATION_1(soap, bathroomcounter) = true;",
          "DESTINATION_2(towel, bathroomcounter) = true;"
        ],
        "rewards": [
        "+ 20 * [ sum_{?a: agent, ?i: item, ?l: location}( pick(?a, ?i, ?l) )]",
        "+ 30 * [ sum_{?a: agent, ?i: item, ?l: location}( place(?a, ?i, ?l) ^ (DESTINATION_0(?i, ?l) | DESTINATION_1(?i, ?l) | DESTINATION_2(?i, ?l)))]",
        "+ 50 * [ sum_{?a: agent, ?l: location}( clean(?a, ?l) ^ exists_{?m: item}(inhand(?a, ?m) ^ MOP_ITEM(?m)) ^ ~cleaned(?l) )]",
        "+ 100 * [ sum_{?l: location}( cleaned(?l) )]"
        ]
      }
    }
  }
  
